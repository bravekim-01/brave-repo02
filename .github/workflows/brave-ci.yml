name: Build and Deploy Django to AKS

on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  IMAGE_NAME: memojjang

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Azure Log-In
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Log-In to ACR
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy-to-aks:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment:
      name: AKS-test
      
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: Azure 로그인
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: AKS 컨텍스트 가져오기
        uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

      - name: 이미지 태그를 최신으로 업데이트
        run: |
          kubectl set image deployment/memojjang memojjang=${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: 배포 상태 확인
        run: |
          kubectl rollout status deployment/memojjang
